# Use colored output
if [ $# -gt 0 ]; then
  if [ "$1" = "--colored-output" ]; then
    fancy_echo() {
      blue=$(tput setaf 4)
      normal=$(tput sgr0)
      printf "\n%b\n" "${blue}$1${normal}"
    }
  fi
else
  fancy_echo() {
    printf "\n%b\n" "$1"
  }
fi

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="$2"

  if [[ -w "$HOME/.zshrc.local" ]]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if (( skip_new_line )); then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

### end common-components/shared-functions

#!/usr/bin/env bash

### end common-components/bash-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.

### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

### end common-components/exit-trap

if ! grep -qiE 'wheezy|jessie|precise|trusty|xenial' /etc/os-release; then
  fancy_echo "Sorry! we don't currently support that distro."
  exit 1
fi

### end linux-components/distro-check

fancy_echo "Updating system packages ..."
  if command -v aptitude >/dev/null; then
    fancy_echo "Using aptitude ..."
  else
    fancy_echo "Installing aptitude ..."
    sudo apt-get install -y aptitude
  fi

  sudo aptitude update

### end linux-components/debian-package-update

fancy_echo "Installing git, for source control management ..."
  sudo aptitude install -y git

fancy_echo "Installing Postgres, a good open source relational database ..."
  sudo aptitude install -y postgresql postgresql-server-dev-all

fancy_echo "Installing ctags, to index files for vim tab completion of methods, classes, variables ..."
  sudo aptitude install -y exuberant-ctags

fancy_echo "Installing vim ..."
  sudo aptitude install -y vim-gtk

fancy_echo "Installing tmux, to save project state and switch between projects ..."
  sudo aptitude install -y tmux

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  sudo aptitude install -y watch

fancy_echo "Installing curl ..."
  sudo aptitude install -y curl

fancy_echo "Installing zsh ..."
  sudo aptitude install -y zsh

fancy_echo "Installing python3-dev ..."
  sudo aptitude install -y python3-dev

fancy_echo "Installing ag search with silversearcher ..."
  sudo aptitude install -y silversearcher-ag

### end linux-components/debian-derivative-packages

# Docker installation

sudo aptitude install -y \
    apt-transport-https \
    ca-certificates \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

sudo aptitude update
sudo aptitude install -y docker-ce

### end common-components/docker

sudo aptitude install -y python-pip
pip install --upgrade pip

### end common-components/pip

fancy_echo "Changing your shell to zsh ..."
  chsh -s $(which zsh)

### end common-components/zsh

fancy_echo "Installing antigen for zsh ..."
sudo aptitude install -y zsh-antigen

### end common-components/antigen

# Download vim-plug plugin manager
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

### end common-components/vim-plug

fancy_echo "Installing your personal additions from ~/.laptop.local ..."
  if [[ -f ~/.laptop.local ]]; then
    source ~/.laptop.local
  fi

### end common-components/personal-additions

